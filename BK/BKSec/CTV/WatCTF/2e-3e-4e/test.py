from math import gcd

def gcdExtended(a, b): 
    # Base Case 
    if a == 0 : 
        return b,0,1
             
    gcd,x1,y1 = gcdExtended(b%a, a) 
     
    # Update x and y using results of recursive 
    # call 
    x = y1 - (b//a) * x1 
    y = x1 
     
    return gcd,x,y 

ct1 = 22838851895739278983095496445349149063605649205275425716620433843284564596158026050462256015274938772544979276523467981611790902763516548664358565498210913420990912826503631664157510217039153098650343156761297022703432908933347574577921673877367017924850069096716957996828173413059365158524946130235093308425
e1 = 114649408368324763905429293422251361336020718659788152272955285125783089475419
ct2 = 43270025235994352697165466328982583956904836775460476316492534330405510189107751940912203163763712499614708483747388898658979421074318642853923555505888189560874235090934208479519303476028023906365890955763432319876088114789176415239705038833588290228573524589533606712660600190227646483477177846528567059172
e2 = 81281362104057880296267641684378208932984303504204706936619914699217155015823

GCD, x, y = gcdExtended(e1, e2)
m = pow(ct1, x,)