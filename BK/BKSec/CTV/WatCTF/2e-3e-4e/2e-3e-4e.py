from math import gcd
from sympy import factorint
from Crypto.Util.number import long_to_bytes

ct = 22838851895739278983095496445349149063605649205275425716620433843284564596158026050462256015274938772544979276523467981611790902763516548664358565498210913420990912826503631664157510217039153098650343156761297022703432908933347574577921673877367017924850069096716957996828173413059365158524946130235093308425
e = 114649408368324763905429293422251361336020718659788152272955285125783089475419
c2 = 1687104632381897800336167139993322321742243919852549639389677324755184298905173014650386521675000715747982817601284722430050115762716426310432294888220219
c3 = 8533117850073381556950878877182890900219124831203522692549816506521540219450029244895988852948937438353294213049410913442590774041961679463908396422904502
c4 = 6269463405782585643581870064889811401100044509499763124255266704474772686790104958330174709265031046100817933959321667480948738226007643563950966936597996
c5 = 8474970844255204774142457468815143096378586055739404661275013916962862189537949928233974292105506138059957454181274578546589587459015650318148372980653101
c6 = 9111954280855308657607720538565464852851517427440434799961481556708081088916508734920794466562080856667644202053618378181266055856870319951406769157216931

p = gcd(c2**2 - c4, c2 * c3 - c6)
print(factorint(p))
print(gcd(e, p-1))
PHI = p-1
d = pow(e, -1, PHI)
m = pow(ct, d, p)
print(m)
print(ct % p - ct)